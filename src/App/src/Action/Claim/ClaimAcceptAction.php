<?php

namespace App\Action\Claim;

use App\Action\AbstractClaimAction;
use App\Form\AbstractForm;
use App\Service\Claim as ClaimService;
use App\Service\Poa\PoaFormatter;
use Exception;
use Interop\Http\ServerMiddleware\DelegateInterface;
use Opg\Refunds\Caseworker\DataModel\Cases\Claim as ClaimModel;
use Psr\Http\Message\ServerRequestInterface;
use Zend\Diactoros\Response\HtmlResponse;

class ClaimAcceptAction extends AbstractClaimAction
{
    /**
     * @var PoaFormatter
     */
    private $poaFormatter;

    public function __construct(ClaimService $claimService, PoaFormatter $poaFormatter)
    {
        parent::__construct($claimService);
        $this->poaFormatter = $poaFormatter;
    }

    public function indexAction(ServerRequestInterface $request, DelegateInterface $delegate)
    {
        $claim = $this->getClaim($request);

        if ($claim === null) {
            throw new Exception('Claim not found', 404);
        }

        if (!$this->poaFormatter->isClaimComplete($claim) || !$this->poaFormatter->isClaimVerified($claim)) {
            throw new Exception('Claim is not complete or verified', 400);
        }

        return new HtmlResponse($this->getTemplateRenderer()->render('app::claim-approve-page', [
            'claim' => $claim
        ]));
    }

    public function addAction(ServerRequestInterface $request, DelegateInterface $delegate)
    {
        parent::addAction($request, $delegate); // TODO: Change the autogenerated stub
    }

    /**
     * @param ServerRequestInterface $request
     * @param ClaimModel $claim
     * @return AbstractForm
     */
    public function getForm(ServerRequestInterface $request, ClaimModel $claim): AbstractForm
    {
        // TODO: Implement getForm() method.
    }
}